# Minimal Dockerfile for reliable builds
FROM node:20-alpine as builder

# Install basic dependencies
RUN apk add --no-cache git

# Set working directory
WORKDIR /app

# Copy package files
COPY package*.json ./

# Install dependencies
RUN npm ci

# Copy source code
COPY . .

# Build application
RUN npm run build

# Production stage
FROM nginx:alpine

# Copy nginx config
COPY nginx.conf /etc/nginx/nginx.conf

# Copy built app
COPY --from=builder /app/dist /usr/share/nginx/html

# Copy public assets
COPY --from=builder /app/public/*.png /usr/share/nginx/html/ 2>/dev/null || true
COPY --from=builder /app/public/*.jpg /usr/share/nginx/html/ 2>/dev/null || true
COPY --from=builder /app/public/*.ico /usr/share/nginx/html/ 2>/dev/null || true
COPY --from=builder /app/public/*.svg /usr/share/nginx/html/ 2>/dev/null || true
COPY --from=builder /app/public/manifest.json /usr/share/nginx/html/ 2>/dev/null || true

# Expose port
EXPOSE 80

# Start nginx
CMD ["nginx", "-g", "daemon off;"]